###############################
##### Cinel Monochromator #####
###############################
# Open loop steppers (encoders for verification)
# Should set MRES = EFAC

## Bragg angle conversion ##
# 63.109133mm = 65.11deg (approx)
# 0.01rad/mm = 0.5729577951308 deg/mm
#
# Dial indicator moves opposite to motor and encoder. To account for this, we set MRES and ERES negative
# MRES = ERES = -EFAC*(0.5729577951308 deg/mm),
# and use an offset = 101.26886969629788 deg
# The offset is calculated from  degrees = -m*(encoder reading) + offset 
# with known point (63.109133mm, 65.11deg), slope m=0.5729577951308 deg/mm

# Axis0 - Bragg angle
# Axis1 - Crystal selection (X-translation)
# Axis2 - Crystal gap (Y-translation) (MFLAGS.INVDOUT=1)
# Axis3 - Pitch 2 (course)
# Axis4 - Roll 2 (course)
#|----------------|-------------------|---------------|
#|    MOTOR       |       STEPF       |    EFAC       |
#|----------------|-------------------|---------------|
#| Bragg          | 0.0000045         | 0.000001      |
#|----------------|-------------------|---------------|
#| Crystal select | 0.0001            | 0.00005       |
#|----------------|-------------------|---------------|
#| Crystal gap    | 0.0000666667      | 0.00005       |
#|----------------|-------------------|---------------|
#| Pitch 2        | 0.00000510204     | 0.000001      |
#|----------------|-------------------|---------------|
#| Roll 2         | 0.000000044       | 0.00000002677 |
#|----------------|-------------------|---------------|


file "$(MOTOR)/db/asyn_motor.db"
{
pattern
{N,  M,        DTYP,         PORT,  ADDR,          DESC,    EGU,  DIR,      VELO,  VBAS,   ACCL,  BDST,   BVEL,   BACC,   MRES,         PREC,  DHLM,   DLLM,  INIT, RTSM, RTRY}
{1,  "m$(N)",  "asynMotor",  ACS1,  0,    "Bragg angle",     deg,  Pos,      0.10,  0.001,   0.1,     0,      1,    0.2,   -5.72957795e-07,        4,  1000,  -1000,    "", "Never", 0}
{2,  "m$(N)",  "asynMotor",  ACS1,  1,              "X",     mm,  Pos,      0.10,  0.001,   0.1,     0,      1,    0.2,   0.00005,         4,  1000,  -1000,    "", "Never", 0}
{3,  "m$(N)",  "asynMotor",  ACS1,  2,              "Y",     mm,  Pos,      0.10,  0.001,   0.1,     0,      1,    0.2,   0.00005,         4,  1000,  -1000,    "", "Never", 0}
{4,  "m$(N)",  "asynMotor",  ACS1,  3,        "Pitch 2",     mm,  Pos,      0.01,  0.001,   0.1,     0,      1,    0.2,   0.000001,        4,  1000,  -1000,    "", "Never", 0}
{5,  "m$(N)",  "asynMotor",  ACS1,  4,         "Roll 2",    rad,  Pos,    0.0001,  0.00001, 0.1,     0,      1,    0.2,   0.00000002677,   4,  1000,  -1000,    "", "Never", 0}
}

### The feedback database is helpful for troubleshooting encoder problems
file "$(MOTOR_ACSMOTION)/db/SPiiPlusFeedback.db"
{
pattern
{M,   PORT, ADDR, PREC, SCAN}
{m1,  ACS1,    0,    6,    2}
{m2,  ACS1,    1,    6,    2}
{m3,  ACS1,    2,    6,    2}
{m4,  ACS1,    3,    6,    2}
{m5,  ACS1,    4,    6,    2}
{m6,  ACS1,    5,    6,    2}
{m7,  ACS1,    6,    6,    2}
{m8,  ACS1,    7,    6,    2}
}

### Uncomment the following to disable setting the position for axes with absolute encoders
file "$(MOTOR_ACSMOTION)/db/SPiiPlusDisableSetPos.db"
{
pattern
{M,   PORT, ADDR}
{m1,  ACS1,    0}
{m2,  ACS1,    1}
{m3,  ACS1,    2}
{m4,  ACS1,    3}
{m5,  ACS1,    4}
# {m6,  ACS1,    5}
# {m7,  ACS1,    6}
# {m8,  ACS1,    7}
}

# file "$(MOTOR)/db/profileMoveController.template"
# {
# pattern
# {R,     PORT, NAXES,  NPOINTS, NPULSES, TIMEOUT}
# {pm1:,  ACS1,     8,     2000,    2000,     2.0}
# }

# file "$(MOTOR)/db/profileMoveAxis.template"
# {
# pattern
# {R,     M, NPOINTS, NREADBACK, PORT, ADDR, TIMEOUT, PREC}
# {pm1:,  1,    2000,      2000, ACS1,    0,     2.0,    4}
# {pm1:,  2,    2000,      2000, ACS1,    1,     2.0,    4}
# {pm1:,  3,    2000,      2000, ACS1,    2,     2.0,    4}
# {pm1:,  4,    2000,      2000, ACS1,    3,     2.0,    4}
# {pm1:,  5,    2000,      2000, ACS1,    4,     2.0,    4}
# {pm1:,  6,    2000,      2000, ACS1,    5,     2.0,    4}
# {pm1:,  7,    2000,      2000, ACS1,    6,     2.0,    4}
# {pm1:,  8,    2000,      2000, ACS1,    7,     2.0,    4}
# }

# file "$(MOTOR)/db/SPiiPlusAxisExtra.db"
# {
# pattern
# {M,   PORT, ADDR}
# {m1,  ACS1,    0}
# {m2,  ACS1,    1}
# {m3,  ACS1,    2}
# {m4,  ACS1,    3}
# {m5,  ACS1,    4}
# {m6,  ACS1,    5}
# {m7,  ACS1,    6}
# {m8,  ACS1,    7}
# }

# file "$(MOTOR)/db/SPiiPlusHoming.db"
# {
# pattern
# {M,   PORT, ADDR, TIMEOUT,    VAL,   MAX_DIST, OFFSET_POS, OFFSET_NEG, CURR_LIMIT}
# {m1,  ACS1,    0,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m2,  ACS1,    1,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m3,  ACS1,    2,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m4,  ACS1,    3,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m5,  ACS1,    4,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m6,  ACS1,    5,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m7,  ACS1,    6,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# {m8,  ACS1,    7,     2.0,    0,     0.0,      0.0,        0.0,        0.0}
# }

# file "$(MOTOR)/db/SPiiPlusJogging.db"
# {
# pattern
# {M}
# {m1}
# {m2}
# {m3}
# {m4}
# {m5}
# {m6}
# {m7}
# {m8}
# }

# These records work, but the initial values are all zero.  Maybe HOPR/LOPR/DRVH/DRVL need to be set?
# file "$(MOTOR)/db/SPiiPlusMaxParams.db"
# {
# pattern
# {M,   PORT, ADDR,  MAX_VELO,  MAX_ACCL,   PREC}
# {m1,  ACS1,    0,       5.0,      20.0,      4}
# {m2,  ACS1,    1,     200.0,    1000.0,      4}
# {m3,  ACS1,    2,     200.0,    1000.0,      4}
# {m4,  ACS1,    3,     200.0,    1000.0,      4}
# {m5,  ACS1,    4,     200.0,    1000.0,      4}
# {m6,  ACS1,    5,     200.0,    1000.0,      4}
# {m7,  ACS1,    6,     200.0,    1000.0,      4}
# {m8,  ACS1,    7,     200.0,    1000.0,      4}
# }

# file "$(MOTOR)/db/SPiiPlusMaxParamsRbv.db"
# {
# pattern
# {M,   PORT, ADDR, PREC}
# {m1,  ACS1,    0,    4}
# {m2,  ACS1,    1,    4}
# {m3,  ACS1,    2,    4}
# {m4,  ACS1,    3,    4}
# {m5,  ACS1,    4,    4}
# {m6,  ACS1,    5,    4}
# {m7,  ACS1,    6,    4}
# {m8,  ACS1,    7,    4}
# }


### The following databases are useful if programs are running on the ACS controller
## PINI can be set to YES for IOCs that use autosave so that global var output records initialize properly
#file "$(MOTOR)/db/SPiiPlusIntVar.db"
#{
#pattern
#{R,         DESC,     PORT,  TAG}
#{c0:1001I,  "Int 1",    ACS1,  1001}
#}
#
## PINI can be set to YES for IOCs that use autosave so that global var output records initialize properly
#file "$(MOTOR)/db/SPiiPlusRealVar.db"
#{
#pattern
#{R,         DESC,      PORT,  TAG,   PREC}
#{c0:1002R,  "Real 1",    ACS1,  1002,     5}
#}
#
#file "$(MOTOR)/db/SPiiPlusProgram.db"
#{
#pattern
#{R,    PORT,  BUFF,   NAME}
#{c0:,  ACS1,   0,     Test}
#}

### This is only used for during development and will be removed in the near future
#file "$(MOTOR)/db/SPiiPlusTest.db"
#{
#pattern
#{R,     PORT}
#{pm1:,  ACS1}
#}
